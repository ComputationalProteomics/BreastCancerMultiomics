---
title: "Differential Expression Analysis - Consensus Cluster"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
engine: knitr
params:
  run: false
---

# Requires Packages:
```{r required packages}
#| message: false
#| warning: false
library(tidyverse)
library(NormalyzerDE)
library(future)
library(future.callr)
library(furrr)
```
```{r}
set.seed(123)
workers <- as.integer(Sys.getenv("NXF_TASK_CPUS", "1"))
plan(callr,workers=workers)
on.exit(expr = {plan(sequential)})
```

# Differential Expression Analysis
## All samples
### Full Proteome

```{r}
dataP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/home/multiomics/results/design_files/ductalvslobular_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/AllSamples/Proteome/'
jDEName <- "allsamples_proteome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Prot',values_from = 'CC.Prot',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Prot.') %>%
  dplyr::select(-matches('CC.Prot.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_Full_noPool.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_proteome.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Prot')) %>% colnames()

proteomeProt <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Phospho
```{r}
dataP <- '/home/multiomics/results/phospho_aggregation/CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/home/multiomics/results/design_files/ductalvslobular_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/AllSamples/Phosphoproteome/'
jDEName <- "allsamples_phospho_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Phospho',values_from = 'CC.Phospho',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Phospho.') %>%
  dplyr::select(-matches('CC.Phospho.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_phospho_noPool.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_phospho.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Phospho')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Transcriptome
```{r}
dataP <- '/home/multiomics/results/normalization/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/home/multiomics/results/design_files/ductalvslobular_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/AllSamples/Transcriptome/'
jDEName <- "allsamples_transcriptome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.RNA',values_from = 'CC.RNA',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.RNA.') %>%
  dplyr::select(-matches('CC.RNA.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_RNA_noPool.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_rna.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.RNA')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Results
```{r}
varskeep <- c('workers','params')
rm(list = c(setdiff(ls(),varskeep)))
invisible(gc())
```

:::{.content-visible when-meta="params.run"}
## All samples - Group 2 Excluded
### Full Proteome

```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/home/multiomics/results/design_files/ductalvslobular_consensus_clustering_noG2.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/AllSamples_noG2/Proteome/'
jDEName <- "allsamples_proteome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Prot',values_from = 'CC.Prot',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Prot.') %>%
  dplyr::select(-matches('CC.Prot.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_Full_noPool_noG2.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_proteome.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Prot')) %>% colnames()

proteomeProt <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Phospho
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/phospho_aggregation/CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/home/multiomics/results/design_files/ductalvslobular_consensus_clustering_noG2.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/AllSamples_noG2/Phosphoproteome/'
jDEName <- "allsamples_phospho_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Phospho',values_from = 'CC.Phospho',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Phospho.') %>%
  dplyr::select(-matches('CC.Phospho.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_phospho_noPool_noG2.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_phospho.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Phospho')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Transcriptome
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/normalization/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/home/multiomics/results/design_files/ductalvslobular_consensus_clustering_noG2.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/AllSamples_noG2/Transcriptome/'
jDEName <- "allsamples_transcriptome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.RNA',values_from = 'CC.RNA',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.RNA.') %>%
  dplyr::select(-matches('CC.RNA.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_RNA_noPool_noG2.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_rna.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.RNA')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Results
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
varskeep <- c('workers','params')
rm(list = c(setdiff(ls(),varskeep)))
invisible(gc())
```

## LN+ vs LN- samples
### Ductal
#### Full Proteome

```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/home/multiomics/results/design_files/lnposvslnneg_ductal_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/LNposvsLNneg/Ductal/Proteome/'
jDEName <- "lnposvslnneg_ductal_proteome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Prot',values_from = 'CC.Prot',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Prot.') %>%
  dplyr::select(-matches('CC.Prot.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_full_ductal.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_proteome.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Prot')) %>% colnames()

proteomeProt <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

#### Phospho
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/phospho_aggregation/CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/home/multiomics/results/design_files/lnposvslnneg_ductal_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/LNposvsLNneg/Ductal/Phosphoproteome/'
jDEName <- "lnposvslnneg_ductal_phospho_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Phospho',values_from = 'CC.Phospho',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Phospho.') %>%
  dplyr::select(-matches('CC.Phospho.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_phospho_ductal.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_phospho.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Phospho')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

#### Transcriptome
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/normalization/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/home/multiomics/results/design_files/lnposvslnneg_ductal_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/LNposvsLNneg/Ductal/Transcriptome/'
jDEName <- "lnposvslnneg_ductal_transcriptome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.RNA',values_from = 'CC.RNA',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.RNA.') %>%
  dplyr::select(-matches('CC.RNA.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_RNA_ductal.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_rna.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.RNA')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

#### Results
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
varskeep <- c('workers','params')
rm(list = c(setdiff(ls(),varskeep)))
invisible(gc())
```

### Lobular
#### Full Proteome

```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/home/multiomics/results/design_files/lnposvslnneg_lobular_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/LNposvsLNneg/Lobular/Proteome/'
jDEName <- "lnposvslnneg_lobular_proteome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Prot',values_from = 'CC.Prot',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Prot.') %>%
  dplyr::select(-matches('CC.Prot.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_full_lobular.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_proteome.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Prot')) %>% colnames()

proteomeProt <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

#### Phospho
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/phospho_aggregation/CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/home/multiomics/results/design_files/lnposvslnneg_lobular_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/LNposvsLNneg/Lobular/Phosphoproteome/'
jDEName <- "lnposvslnneg_lobular_phospho_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Phospho',values_from = 'CC.Phospho',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Phospho.') %>%
  dplyr::select(-matches('CC.Phospho.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_phospho_lobular.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_phospho.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Phospho')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

#### Transcriptome
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/normalization/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/home/multiomics/results/design_files/lnposvslnneg_lobular_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/LNposvsLNneg/Lobular/Transcriptome/'
jDEName <- "lnposvslnneg_lobular_transcriptome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.RNA',values_from = 'CC.RNA',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.RNA.') %>%
  dplyr::select(-matches('CC.RNA.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_RNA_lobular.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_rna.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.RNA')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

#### Results
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
varskeep <- c('workers','params')
rm(list = c(setdiff(ls(),varskeep)))
invisible(gc())
```

## G1 vs G2
### Full Proteome

```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/home/multiomics/results/design_files/g1vsg2_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/G1vsG2/Proteome/'
jDEName <- "g1vsg2_proteome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Prot',values_from = 'CC.Prot',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Prot.') %>%
  dplyr::select(-matches('CC.Prot.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_full_g1g2.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_proteome.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Prot')) %>% colnames()

proteomeProt <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Phospho
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/phospho_aggregation/CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/home/multiomics/results/design_files/g1vsg2_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/G1vsG2/Phosphoproteome/'
jDEName <- "g1vsg2_phospho_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Phospho',values_from = 'CC.Phospho',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Phospho.') %>%
  dplyr::select(-matches('CC.Phospho.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_phospho_g1g2.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_phospho.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Phospho')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Transcriptome
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/normalization/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/home/multiomics/results/design_files/g1vsg2_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/G1vsG2/Transcriptome/'
jDEName <- "g1vsg2_transcriptome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.RNA',values_from = 'CC.RNA',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.RNA.') %>%
  dplyr::select(-matches('CC.RNA.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_RNA_g1g2.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_rna.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.RNA')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Results
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
varskeep <- c('workers','params')
rm(list = c(setdiff(ls(),varskeep)))
invisible(gc())
```

## G3 vs G4
### Full Proteome

```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/home/multiomics/results/design_files/g3vsg4_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/G3vsG4/Proteome/'
jDEName <- "g3vsg4_proteome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Prot',values_from = 'CC.Prot',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Prot.') %>%
  dplyr::select(-matches('CC.Prot.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_full_g3g4.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_proteome.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Prot')) %>% colnames()

proteomeProt <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Phospho
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/phospho_aggregation/CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/home/multiomics/results/design_files/g3vsg4_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/G3vsG4/Phosphoproteome/'
jDEName <- "g3vsg4_phospho_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.Phospho',values_from = 'CC.Phospho',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.Phospho.') %>%
  dplyr::select(-matches('CC.Phospho.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_phospho_g3g4.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_phospho.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.Phospho')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Transcriptome
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
dataP <- '/home/multiomics/results/normalization/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/home/multiomics/results/design_files/g3vsg4_consensus_clustering.tsv'
outDir <- '/home/multiomics/results/differentialexpression/ConsensusCluster/G3vsG4/Transcriptome/'
jDEName <- "g3vsg4_transcriptome_cluster"

design <- read_tsv(designP) %>% 
  pivot_wider(names_from = 'CC.RNA',values_from = 'CC.RNA',values_fn = ~if_else(is.numeric(.x),1,0),values_fill = 0,names_prefix = 'CC.RNA.') %>%
  dplyr::select(-matches('CC.RNA.NA'))

design2 <- read_tsv('/home/multiomics/results/design_files/design_RNA_g3g4.tsv') %>% left_join(.,design,'sample_id')
designP <- paste0(designP,'_rna.tsv')
write_tsv(x = design2,file = designP)

compCols <- design2 %>% dplyr::select(contains('CC.RNA')) %>% colnames()

phosphoPep <- future_map(.options = furrr_options(globals = TRUE,seed = TRUE),.x = compCols,.f = function(x){
  jDEName <- paste0(jDEName,'_',x)
  normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = x,comparisons = '1-0',batchCol = 'ms_run_order')
})
```

### Results
```{r}
#| eval: !expr params$run
#| echo: !expr params$run
varskeep <- c('workers','params')
rm(list = c(setdiff(ls(),varskeep)))
invisible(gc())
```
:::