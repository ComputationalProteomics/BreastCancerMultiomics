---
title: "Protein rollup"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
engine: knitr
---
# Clone ProteinRollup repo

```{bash}
git clone https://github.com/ComputationalProteomics/ProteinRollup.git /home/multiomics/ProteinRollup
```

# Requires Packages:
```{r required packages}
#| message: false
#| warning: false
library(tidyverse)
library(NormalyzerDE)
library(argparser)
library(devtools)
source('/home/multiomics/ProteinRollup/R/ProteinRollup.R')

source(file = '/home/multiomics/notebooks/id_sorting.R',chdir = TRUE)
```

# Protein Rollup
## Full proteome
### Sorting IDs alphabetically
```{r fullproteome sorting ids}
data <- read_tsv(file = '/home/multiomics/results/normalization/fullproteome/peptide_normalization/CycLoess-normalized.txt') %>%
  sortIds(data = .,proteinColumn = 'Protein.Ids')

if(!dir.exists(paths = '/home/multiomics/results/rollup/fullproteome/')) {
  dir.create(path = '/home/multiomics/results/rollup/fullproteome/',recursive = TRUE)
}

write_tsv(x = data,file = '/home/multiomics/results/rollup/fullproteome/cycloess_normalized_sorted.tsv')
```

### Rollup
```{r rollup fullproteome}
# Rscript /home/multiomics/ProteinRollup/run_protein_rollup.R \
#     --rdf_fp /home/multiomics/results/rollup/fullproteome/cycloess_normalized_sorted.tsv \
#     --ddf_fp /home/multiomics/results/design_files/mergedDesign_final.tsv \
#     --sample_col sample_id \
#     --protein_col Protein \
#     --out_fp /home/multiomics/results/rollup/fullproteome/cycloess_Rollup.tsv
  
design <- read_tsv('/home/multiomics/results/design_files/mergedDesign_final.tsv')
data <- read_tsv('/home/multiomics/results/rollup/fullproteome/cycloess_normalized_sorted.tsv')
peptide_mat <- data |> 
    select(which(colnames(data) %in% design[["sample_id"]])) |> 
    as.matrix()
proteinIds <- data[["Protein"]]
rollupRes <- protein_rollup(protein_ids = proteinIds, pep_mat = peptide_mat)
write_tsv(x = rollupRes, file = '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup.tsv')
```

### Adding Gene Information
```{r add genes fullproteome}
diaP <- '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup.tsv'
diannP <- '/home/multiomics/results/rollup/fullproteome/cycloess_normalized_sorted.tsv'
diaData <- read_tsv(diaP)
diann <- read_tsv(diannP)
diannReduced <- diann %>% 
  dplyr::select(Protein,Protein.Names,First.Protein.Description,Genes)
diaDataGenes <- left_join(x = diaData,y = diannReduced,by = "Protein") %>% 
  filter(.,!duplicated(Protein))
diaDataGenes <- relocate(diaDataGenes,where(~is.character(.x)),.after = 'Protein')
newColNames <- diaDataGenes %>% select(-c(1:6)) %>% colnames(.) %>% str_remove(pattern = '^X')
newColNames <- c(colnames(diaDataGenes)[1:6],newColNames)
colnames(diaDataGenes) <- newColNames

write_tsv(x = diaDataGenes,file = '/home/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv')
```

## Phosphoproteome
```{r sortids phosphoproteome}
data <- read_tsv(file = '/home/multiomics/results/normalization/phosphoproteome/peptide_normalization/CycLoess-normalized.txt') %>%
  sortIds(data = .,proteinColumn = 'Protein.Ids')

if(!dir.exists(paths = '/home/multiomics/results/rollup/phosphoproteome/')) {
  dir.create(path = '/home/multiomics/results/rollup/phosphoproteome/',recursive = TRUE)
}
write_tsv(x = data,file = '/home/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv')
```

### Rollup
```{r rollup phosphoproteome}
# Rscript /home/multiomics/ProteinRollup/run_protein_rollup.R \
#     --rdf_fp /home/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv \
#     --ddf_fp /home/multiomics/results/design_files/mergedDesign_PHOSPHO_Filtered.tsv \
#     --sample_col sample_id \
#     --protein_col Protein \
#     --out_fp /home/multiomics/results/rollup/phosphoproteome/cycloess_Rollup.tsv
design <- read_tsv('/home/multiomics/results/design_files/mergedDesign_PHOSPHO_Filtered.tsv')
data <- read_tsv('/home/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv')
peptide_mat <- data |> 
    select(which(colnames(data) %in% design[["sample_id"]])) |> 
    as.matrix()
proteinIds <- data[["Protein"]]
rollupRes <- protein_rollup(protein_ids = proteinIds, pep_mat = peptide_mat)
write_tsv(x = rollupRes, file = '/home/multiomics/results/rollup/phosphoproteome/cycloess_Rollup.tsv')
```

### Adding Gene Information
```{r add genes phosphoproteome}
diaP <- '/home/multiomics/results/rollup/phosphoproteome/cycloess_Rollup.tsv'
diannP <- '/home/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
diaData <- read_tsv(diaP)
diann <- read_tsv(diannP)
diannReduced <- diann %>% 
  dplyr::select(Protein,Protein.Names,First.Protein.Description,Genes)
diaDataGenes <- left_join(x = diaData,y = diannReduced,by = "Protein") %>% 
  filter(.,!duplicated(Protein))
diaDataGenes <- relocate(diaDataGenes,where(~is.character(.x)),.after = 'Protein')
newColNames <- diaDataGenes %>% select(-c(1:6)) %>% colnames(.) %>% str_remove(pattern = '^X')
newColNames <- c(colnames(diaDataGenes)[1:6],newColNames)
colnames(diaDataGenes) <- newColNames

write_tsv(x = diaDataGenes,file = '/home/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv')
```