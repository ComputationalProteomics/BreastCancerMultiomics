---
title: "Differential Expression Analysis"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
engine: knitr
---

# Requires Packages:
```{r required packages}
#| message: false
#| warning: false
library(tidyverse)
library(NormalyzerDE)
library(future)
library(future.callr)
library(furrr)
```
```{r}
set.seed(123)
workers <- availableCores(constraints = 'connections',which = 'min')
plan(callr,workers=workers)
on.exit(expr = {plan(sequential)})
```

# Differential Expression Analysis
## Ductal vs Lobular
### Full Proteome
#### Peptide Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_normalized_sorted.tsv'
designP <- '/multiomics/results/design_files/design_Full_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_fullproteome_peptide"

proteomePep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_Full_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Peptide Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '/multiomics/results/design_files/design_phospho_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

##### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

##### Phosphopeptide aggregation Phosphosite
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphosites_flanking_aggregated.tsv'
designP <- '/multiomics/results/design_files/design_phospho_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_phosphoproteome_peptide_aggPhosphoSite"

phosphoPepAggSite <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_phospho_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_noPool.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "ductalvslobular_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,proteomePep,phosphoProt,phosphoPep,transcriptome,phosphoPepAggSite,phosphoPepAggMod)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```

## Ductal vs Lobular - Group 2 Excluded
### Full Proteome
```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_Full_noPool_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular_noG2'
jDEName <- "ductalvslobular_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_noPool_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular_noG2'
jDEName <- "ductalvslobular_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_noPool_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/DuctalvsLobular_noG2'
jDEName <- "ductalvslobular_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,transcriptome,phosphoPepAggSite)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```

## LN+ vs LN-
### All samples - Group 2 Excluded
#### Full Proteome
```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_Full_noPool_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/AllSamples_noG2'
jDEName <- "ductalvslobular_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Phosphoproteome
##### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_noPool_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/AllSamples_noG2'
jDEName <- "ductalvslobular_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_noPool_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/AllSamples_noG2'
jDEName <- "ductalvslobular_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,logTrans = FALSE)})
```

#### Results
```{r}
results <- list(proteomeProt,transcriptome,phosphoPepAggSite)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```

### Ductal
#### Full Proteome
##### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_full_ductal.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "LN_ductal_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Phosphoproteome
##### Peptide Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '/multiomics/results/design_files/design_phospho_ductal.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "LN_ductal_phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

###### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_ductal.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "LN_ductal_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

###### Phosphopeptide aggregation Phosphosite
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphosites_flanking_aggregated.tsv'
designP <- '/multiomics/results/design_files/design_phospho_ductal.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "LN_ductal_phosphoproteome_peptide_aggPhosphoSite"

phosphoPepAggSite <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

##### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_phospho_ductal.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "LN_ductal_phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_ductal.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "LN_ductal_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,logTrans = FALSE)})
```

#### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome,phosphoPepAggSite,phosphoPepAggMod)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```


### Ductal - Group2 Excluded
#### Full Proteome
##### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_full_ductal_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal_noG2'
jDEName <- "LN_ductal_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Phosphoproteome
##### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_ductal_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal_noG2'
jDEName <- "LN_ductal_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_ductal_noG2.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Ductal_noG2'
jDEName <- "LN_ductal_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,logTrans = FALSE)})
```

#### Results
```{r}
results <- list(proteomeProt,transcriptome,phosphoPepAggSite)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```


### Lobular
#### Full Proteome
##### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_full_lobular.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "LN_lobular_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Phosphoproteome
##### Peptide Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '/multiomics/results/design_files/design_phospho_lobular.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "LN_lobular_phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

###### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_lobular.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "LN_lobular_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

###### Phosphopeptide aggregation Phosphosite
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphosites_flanking_aggregated.tsv'
designP <- '/multiomics/results/design_files/design_phospho_lobular.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "LN_lobular_phosphoproteome_peptide_aggPhosphoSite"

phosphoPepAggSite <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

##### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_phospho_lobular.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "LN_lobular_phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_lobular.tsv'
outDir <- '/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "LN_lobular_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,logTrans = FALSE)})
```

#### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome,phosphoPepAggSite,phosphoPepAggMod)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```

## Group1 vs Group2
### Full Proteome
#### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_full_g1g2.tsv'
outDir <- '/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "G1G2_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Peptide Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g1g2.tsv'
outDir <- '/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "G1G2_phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

##### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g1g2.tsv'
outDir <- '/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "G1G2_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

##### Phosphopeptide aggregation Phosphosite
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphosites_flanking_aggregated.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g1g2.tsv'
outDir <- '/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "G1G2_phosphoproteome_peptide_aggPhosphoSite"

phosphoPepAggSite <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g1g2.tsv'
outDir <- '/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "G1G2_phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_g1g2.tsv'
outDir <- '/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "G1G2_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome,phosphoPepAggSite,phosphoPepAggMod)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```


## Group3 vs Group4
### Full Proteome
#### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_full_g3g4.tsv'
outDir <- '/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "G3G4_fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Peptide Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g3g4.tsv'
outDir <- '/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "G3G4_phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

##### Phosphopeptide aggregation Modified.Sequence
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphopeptides_flanking.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g3g4.tsv'
outDir <- '/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "G3G4_phosphoproteome_peptide_aggModSeq"

phosphoPepAggMod <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

##### Phosphopeptide aggregation Phosphosite
```{r}
dataP <- '/multiomics/data/proteomics/phospho/phospho_aggregation/Phosphopeptide_CycLoess-normalized.txt.phosphosites_flanking_aggregated.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g3g4.tsv'
outDir <- '/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "G3G4_phosphoproteome_peptide_aggPhosphoSite"

phosphoPepAggSite <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '/multiomics/results/design_files/design_phospho_g3g4.tsv'
outDir <- '/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "G3G4_phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '/multiomics/data/transcriptomics/genematrix_adjusted_cycloess.tsv'
designP <- '/multiomics/results/design_files/design_RNA_g3g4.tsv'
outDir <- '/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "G3G4_transcriptome"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome,phosphoPepAggSite,phosphoPepAggMod)
future_map(.x = results,.f = value)
invisible(gc())
rm(list = ls())
```