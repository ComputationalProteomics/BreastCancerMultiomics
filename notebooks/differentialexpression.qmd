---
title: "Differential Expression Analysis"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
engine: knitr
---

# Requires Packages:
```{r required packages}
#| message: false
#| warning: false
library(tidyverse)
library(NormalyzerDE)
library(future)
library(future.callr)
library(furrr)
```
```{r}
set.seed(123)
workers <- availableCores(constraints = 'connections',which = 'min')
plan(callr,workers=workers)
on.exit(expr = {plan(sequential)})
```

# Differential Expression Analysis
## Ductal vs Lobular
### Full Proteome
#### Peptide Level

```{r}
dataP <- '~/multiomics/results/rollup/fullproteome/cycloess_normalized_sorted.tsv'
designP <- '~/multiomics/results/design_files/design_Full_noPool.tsv'
outDir <- '~/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "fullproteome_peptide"

proteomePep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_Full_noPool.tsv'
outDir <- '~/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Peptide Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_noPool.tsv'
outDir <- '~/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_noPool.tsv'
outDir <- '~/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted_centered.tsv'
designP <- '~/multiomics/results/design_files/design_RNA_noPool.tsv'
outDir <- '~/multiomics/results/differentialexpression/DuctalvsLobular'
jDEName <- "transcriptomics_tpm_normalized"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'InvCa.type',comparisons = c('Ductal-Lobular'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,proteomePep,phosphoProt,phosphoPep,transcriptome)
future_map(.x = results,.f = value)
rm(list = ls())
```

## LN+ vs LN-
### Ductal
#### Full Proteome
##### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_full_ductal.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Phosphoproteome
##### Peptide Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_ductal.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

##### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_ductal.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Transcriptomics
```{r}
dataP <- '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted_centered.tsv'
designP <- '~/multiomics/results/design_files/design_RNA_ductal.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Ductal'
jDEName <- "transcriptomics_tpm_normalized"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,logTrans = FALSE)})
```

#### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome)
future_map(.x = results,.f = value)
rm(list = ls())
```

### Lobular
#### Full Proteome
##### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_full_lobular.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Phosphoproteome
##### Peptide Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_lobular.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

##### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_lobular.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,batchCol = 'group')})
```

#### Transcriptomics
```{r}
dataP <- '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted_centered.tsv'
designP <- '~/multiomics/results/design_files/design_RNA_lobular.tsv'
outDir <- '~/multiomics/results/differentialexpression/LNposvsLNneg/Lobular'
jDEName <- "transcriptomics_tpm_normalized"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'LN',comparisons = c('1-0'),leastRepCount = 3,logTrans = FALSE)})
```

#### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome)
future_map(.x = results,.f = value)
rm(list = ls())
```

## Group1 vs Group2
### Full Proteome
#### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_full_g1g2.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Peptide Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_g1g2.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_g1g2.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted_centered.tsv'
designP <- '~/multiomics/results/design_files/design_RNA_g1g2.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group1vsGroup2'
jDEName <- "transcriptomics_tpm_normalized"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group1-Group2'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome)
future_map(.x = results,.f = value)
rm(list = ls())
```


## Group3 vs Group4
### Full Proteome
#### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/fullproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_full_g3g4.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "fullproteome_protein"

proteomeProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

### Phosphoproteome
#### Peptide Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_normalized_sorted.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_g3g4.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "phosphoproteome_peptide"

phosphoPep <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

#### Protein Level

```{r}
dataP <- '~/multiomics/results/rollup/phosphoproteome/cycloess_Rollup_Genes.tsv'
designP <- '~/multiomics/results/design_files/design_phospho_g3g4.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "phosphoproteome_protein"

phosphoProt <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,batchCol = 'group')})
```

### Transcriptomics
```{r}
dataP <- '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted_centered.tsv'
designP <- '~/multiomics/results/design_files/design_RNA_g3g4.tsv'
outDir <- '~/multiomics/results/differentialexpression/Group3vsGroup4'
jDEName <- "transcriptomics_tpm_normalized"

transcriptome <- future(globals = TRUE,gc = TRUE,seed = TRUE,expr = {normalyzerDE(jobName = jDEName,designPath = designP,dataPath = dataP,outputDir = outDir,sampleCol = 'sample_id',condCol = 'Group.Info',comparisons = c('Group3-Group4'),leastRepCount = 3,logTrans = FALSE)})
```

### Results
```{r}
results <- list(proteomeProt,phosphoPep,phosphoProt,transcriptome)
future_map(.x = results,.f = value)
rm(list = ls())
```