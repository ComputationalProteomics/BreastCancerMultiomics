---
title: "Data pre-processing"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
engine: knitr
---

# Requires Packages:
```{r required packages}
#| message: false
#| warning: false
library(tidyverse)
library(NormalyzerDE)
```

# Data Pre-processing

## Transcriptomics Data
```{r Transcriptomics Data preprocessing}
#| message: false
# Data Downloaded from https://data.mendeley.com/datasets/yzxtxn4nmd
load('~/multiomics/data/transcriptomics/Gene.ID.ann.Rdata')
load('~/multiomics/data/transcriptomics/SCANB.9206.genematrix_noNeg.Rdata')
design <- read_tsv('~/multiomics/results/design_files/mergedDesign_final.tsv') %>% 
  filter(!is.na(GEX.assay))

geneNames <- rownames(SCANB.9206.genematrix_noNeg)

newGenes <- SCANB.9206.genematrix_noNeg %>% 
  as_tibble() %>% 
  dplyr::select(design$GEX.assay)

sampleNames <- newGenes %>% 
  colnames %>% 
  str_sub(start = 1,end = 7)

colnames(newGenes) <- sampleNames
newGenes <- bind_cols(Gene=geneNames,newGenes)
# it does not appear that the adjusted data is log2 transformed even if it is described as being (max value is over 70000)
newGenes <- newGenes %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  mutate(across(where(is.numeric),~log2(.x)))
# The row order between the annotation matrix and the gene matrix is the same, so one can just swap gene names

write_tsv(x = newGenes,file =  '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted.tsv')
```

```{r Transcriptomics Data preprocessing continued}
#| message: false
# Data Downloaded from https://data.mendeley.com/datasets/yzxtxn4nmd
load('~/multiomics/data/transcriptomics/SCANB.9206.mymatrix.Rdata')

geneNames <- rownames(SCANB.9206.mymatrix)

newGenes <- SCANB.9206.mymatrix %>% 
  as_tibble() %>% 
  dplyr::select(design$GEX.assay)

sampleNames <- newGenes %>% 
  colnames %>% 
  str_sub(start = 1,end = 7)

colnames(newGenes) <- sampleNames
newGenes <- bind_cols(Gene=geneNames,newGenes)
# The row order between the annotation matrix and the gene matrix is the same, so one can just swap gene names

write_tsv(x = newGenes,file = '~/multiomics/data/transcriptomics/genematrix_filtered_unadjusted.tsv')

newGenesTPM <- newGenes %>% 
  dplyr::mutate(across(where(is.numeric),~(.x/sum(.x)*10**6)))

write_tsv(x = newGenesTPM,file = '~/multiomics/data/transcriptomics/genematrix_unadjusted_tpm.tsv')

newGenesTPMNorm <- newGenesTPM %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  mutate(across(where(is.numeric),~log2(.x)))

write_tsv(x = newGenesTPMNorm,file = '~/multiomics/data/transcriptomics/genematrix_unadjusted_tpm_normalized.tsv')
```


## Proteomics Data
### DIA-NN Peptide
#### Data Clean-up
```{r peptide data cleanup}
#| message: false
mergedDesign <- read_tsv(file = '~/multiomics/results/design_files/mergedDesign_final.tsv')
data <- read_tsv(file = '~/multiomics/data/proteomics/full/230814_report.pr_matrix.tsv') %>% 
  mutate(across(where(is.double),~na_if(.,0.0))) %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  dplyr::filter(str_detect(Protein.Group,'^Cont\\_{1}[:alnum:]{6}(?!\\;)',negate = TRUE)) #remove rows with contaminant as single ID

newColNames <- data %>%
  select(-c(1:10)) %>%
  colnames()
newColNames <- newColNames %>%
  str_extract(pattern = '(?<=\\\\)[:digit:]{6}\\_[:graph:]+(?=\\.mzML\\.dia)') %>%
  str_replace_all(pattern = '\\-',replacement = '\\_')
newColNames <- c(colnames(data)[1:10],newColNames)
colnames(data) <- newColNames

newData <- data %>% 
  select(mergedDesign$file_name)
colnames(newData) <- mergedDesign$sample_id
newData <- bind_cols(data[,1:10],newData)

write_tsv(x = newData,file = '~/multiomics/data/proteomics/full/report.pr_matrix_clean.tsv')
```

#### Peptide-level Normalization
```{r peptide level normalization}
jobName <- 'peptide_normalization'
dataP <- '~/multiomics/data/proteomics/full/report.pr_matrix_clean.tsv'
designP <- '~/multiomics/results/design_files/mergedDesign_final.tsv'
outputP <- '~/multiomics/results/normalization/fullproteome'

normalyzer(jobName = jobName,designPath = designP,dataPath = dataP,outputDir = outputP,normalizeRetentionTime = FALSE,zeroToNA = TRUE,sampleColName = 'sample_id',groupColName = 'group',writeReportAsPngs = TRUE)
```

## DIA-NN Protein Group Table
### Data Clean-up
```{r protein data cleanup}
data <- read_tsv(file = '~/multiomics/data/proteomics/full/230814_report.pg_matrix.tsv') %>% 
  mutate(across(where(is.double),~na_if(.,0.0))) %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  filter(str_detect(Protein.Group,'^Cont\\_{1}[:alnum:]{6}(?!\\;)',negate = TRUE))
designP <- '~/multiomics/results/design_files/mergedDesign_final.tsv'
design <- read_tsv(designP)

newColNames <- data %>% 
  select(-c(1:5)) %>% 
  colnames()
newColNames <- newColNames %>%
  str_extract(pattern = '(?<=\\\\)[:digit:]{6}\\_[:graph:]+(?=\\.mzML\\.dia)') %>% 
  str_replace_all(pattern = '\\-',replacement = '\\_')
newColNames <- c(colnames(data)[1:5],newColNames)
colnames(data) <- newColNames

newData <- data %>% 
  select(design$file_name)
colnames(newData) <- design$sample_id
newData <- bind_cols(data[,1:5],newData)

write_tsv(x = newData,file = '~/multiomics/data/proteomics/full/report.pg_matrix_clean.tsv')
```

### Protein-level Normalization
```{r protein level normalization}
jobName <- 'protein_normalization'
dataP <- '~/multiomics/data/proteomics/full/report.pg_matrix_clean.tsv'
designP <- '~/multiomics/results/design_files/mergedDesign_final.tsv'
outputP <- '~/multiomics/results/normalization/fullproteome'

normalyzer(jobName = jobName,designPath = designP,dataPath = dataP,outputDir = outputP,normalizeRetentionTime = FALSE,zeroToNA = TRUE,sampleColName = 'sample_id',groupColName = 'group',writeReportAsPngs = TRUE)
```
