---
title: "Data pre-processing"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
engine: knitr
---

# Requires Packages:
```{r required packages}
#| message: false
#| warning: false
library(tidyverse)
library(NormalyzerDE)
library(data.table)
library(future)
library(future.callr)
library(furrr)
```
```{r}
set.seed(123)
workers <- availableCores(constraints = 'connections',which = 'min')
plan(callr,workers=workers)
on.exit(expr = {plan(sequential)})
```


# Data Pre-processing

## Transcriptomics Data
```{r Transcriptomics Data preprocessing}
#| message: false
# Data Downloaded from https://data.mendeley.com/datasets/yzxtxn4nmd
load('~/multiomics/data/transcriptomics/Gene.ID.ann.Rdata')
load('~/multiomics/data/transcriptomics/SCANB.9206.genematrix_noNeg.Rdata')
design <- read_tsv('~/multiomics/results/design_files/mergedDesign_ref_mutation.tsv') %>% 
  filter(!is.na(GEX.assay))

geneNames <- rownames(SCANB.9206.genematrix_noNeg) %>% 
  data.frame(Gene.ID=.) %>% 
  left_join(.,Gene.ID.ann)

newGenes <- SCANB.9206.genematrix_noNeg %>% 
  as_tibble() %>% 
  dplyr::select(design$GEX.assay)

sampleNames <- newGenes %>% 
  colnames %>% 
  str_split_i(pattern = '\\.',i = 1)

colnames(newGenes) <- sampleNames
newGenes <- newGenes %>% 
  mutate(across(everything(),~na_if(x=.x,y=0))) %>%
  mutate(across(everything(),function(x){log2(x)}))

# Running this step as data.table for memory efficiency
# newGenes <- as.data.table(newGenes)
# newGenes <- newGenes[, lapply(.SD, function(x) x - mean(x,na.rm=TRUE)), by = .I]

# The row order between the annotation matrix and the gene matrix is the same, so one can just swap gene names
newGenes <- bind_cols(geneNames,newGenes)

write_tsv(x = newGenes,file =  '~/multiomics/data/transcriptomics/genematrix_filtered_adjusted_centered.tsv')
```

## Proteomics Data
### DIA-NN Peptide
#### Data Clean-up
```{r peptide data cleanup}
#| message: false
mergedDesign <- read_tsv(file = '~/multiomics/results/design_files/mergedDesign_final.tsv')
data <- read_tsv(file = '~/multiomics/data/proteomics/full/230814_report.pr_matrix.tsv') %>% 
  mutate(across(where(is.double),~na_if(.,0.0))) %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  dplyr::filter(str_detect(Protein.Group,'^Cont\\_{1}[:alnum:]{6}(?!\\;)',negate = TRUE)) #remove rows with contaminant as single ID

newColNames <- data %>%
  select(-c(1:10)) %>%
  colnames()
newColNames <- newColNames %>%
  str_extract(pattern = '(?<=\\\\)[:digit:]{6}\\_[:graph:]+(?=\\.mzML\\.dia)') %>%
  str_replace_all(pattern = '\\-',replacement = '\\_')
newColNames <- c(colnames(data)[1:10],newColNames)
colnames(data) <- newColNames

newData <- data %>% 
  select(mergedDesign$file_name)
colnames(newData) <- mergedDesign$sample_id
newData <- bind_cols(data[,1:10],newData)

write_tsv(x = newData,file = '~/multiomics/data/proteomics/full/report.pr_matrix_clean.tsv')
```

#### Peptide-level Normalization
```{r peptide level normalization}
jobName <- 'peptide_normalization'
dataP <- '~/multiomics/data/proteomics/full/report.pr_matrix_clean.tsv'
designP <- '~/multiomics/results/design_files/mergedDesign_final.tsv'
outputP <- '~/multiomics/results/normalization/fullproteome'

proteomePepNorm <- future(seed = TRUE,globals = TRUE,gc = TRUE,expr = {normalyzer(jobName = jobName,designPath = designP,dataPath = dataP,outputDir = outputP,normalizeRetentionTime = FALSE,zeroToNA = TRUE,sampleColName = 'sample_id',groupColName = 'group',writeReportAsPngs = TRUE)})
```

### DIA-NN Protein Group Table
#### Data Clean-up
```{r protein data cleanup}
data <- read_tsv(file = '~/multiomics/data/proteomics/full/230814_report.pg_matrix.tsv') %>% 
  mutate(across(where(is.double),~na_if(.,0.0))) %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  filter(str_detect(Protein.Group,'^Cont\\_{1}[:alnum:]{6}(?!\\;)',negate = TRUE))
designP <- '~/multiomics/results/design_files/mergedDesign_final.tsv'
design <- read_tsv(designP)

newColNames <- data %>% 
  select(-c(1:5)) %>% 
  colnames()
newColNames <- newColNames %>%
  str_extract(pattern = '(?<=\\\\)[:digit:]{6}\\_[:graph:]+(?=\\.mzML\\.dia)') %>% 
  str_replace_all(pattern = '\\-',replacement = '\\_')
newColNames <- c(colnames(data)[1:5],newColNames)
colnames(data) <- newColNames

newData <- data %>% 
  select(design$file_name)
colnames(newData) <- design$sample_id
newData <- bind_cols(data[,1:5],newData)

write_tsv(x = newData,file = '~/multiomics/data/proteomics/full/report.pg_matrix_clean.tsv')
```

#### Protein-level Normalization
```{r protein level normalization}
jobName <- 'protein_normalization'
dataP <- '~/multiomics/data/proteomics/full/report.pg_matrix_clean.tsv'
designP <- '~/multiomics/results/design_files/mergedDesign_final.tsv'
outputP <- '~/multiomics/results/normalization/fullproteome'

proteomeProtNorm <- future(seed = TRUE,globals = TRUE,gc = TRUE,expr = {normalyzer(jobName = jobName,designPath = designP,dataPath = dataP,outputDir = outputP,normalizeRetentionTime = FALSE,zeroToNA = TRUE,sampleColName = 'sample_id',groupColName = 'group',writeReportAsPngs = TRUE)})
```


## Phosphoproteomics Data
### DIA-NN Peptide
#### Data Clean-up
```{r}
dataP <- '~/multiomics/data/proteomics/phospho/230815_report.pr_matrix.tsv'

# In the pdf report from DIA-NN, there are samples which have less than 10 000 precursors at 1% FDR. Therefore, before proceeding, these samples will be removed.
mergedDesign <- read_tsv(file = '~/multiomics/results/design_files/mergedDesign_PHOSPHO_Filtered.tsv')
data <- read_tsv(dataP) %>% 
  mutate(across(where(is.double),~na_if(.,0.0))) %>% 
  mutate(across(where(is.double),~na_if(.,0))) %>% 
  filter(str_detect(Protein.Group,'^Cont\\_{1}[:alnum:]{6}(?!\\;)',negate = TRUE))

newColNames <- data %>%
  dplyr::select(-c(1:10)) %>%
  colnames()
newColNames <- newColNames %>%
  str_extract(pattern = '(?<=\\\\)[:digit:]{6}\\_[:graph:]+(?=\\.mzML\\.dia)') %>%
  str_replace_all(pattern = '\\-',replacement = '\\_')
newColNames <- c(colnames(data)[1:10],newColNames)
colnames(data) <- newColNames

newData <- data %>% 
  dplyr::select(mergedDesign$file_name)
colnames(newData) <- mergedDesign$sample_id
newData <- bind_cols(data[,1:10],newData) %>% 
  filter(str_detect(Modified.Sequence,'UniMod\\:21'))

write_tsv(x = newData,file = '~/multiomics/data/proteomics/phospho/report.pr_matrix_clean.tsv')
```

#### Peptide-level Normalization
```{r}
jobName <- 'peptide_normalization'
dataP <- '~/multiomics/data/proteomics/phospho/report.pr_matrix_clean.tsv'
designP <- '~/multiomics/results/design_files/mergedDesign_PHOSPHO_Filtered.tsv'
outputP <- '~/multiomics/results/normalization/phosphoproteome'

phosphoPepNorm <- future(seed = TRUE,globals = TRUE,gc = TRUE,expr = {normalyzer(jobName = jobName,designPath = designP,dataPath = dataP,outputDir = outputP,normalizeRetentionTime = FALSE,zeroToNA = TRUE,sampleColName = 'sample_id',groupColName = 'group')})
```

## Results Normalization
```{r}
results <- list(proteomePepNorm,proteomeProtNorm,phosphoPepNorm)
future_map(.x = results,.f = value)
```

