---
title: "Sample Selection"
author: "Sergio Mosquim Junior"
format:
  html:
    toc: true
    code-fold: true
    embed-resources: true
    toc-location: left
    smooth-scroll: true
    message: false
engine: knitr
---

    This file was updated on 2025.02.07 in order to check that the same file would be generated but also fix a sample ID that was mislabeled

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r Output Directory}
outputdir <- paste0('/home/multiomics/results/design_files/')

if(!dir.exists(paths = outputdir)) {
  dir.create(path = outputdir,recursive = TRUE)
}
```

```{r}
library(tidyverse)
library(openxlsx)
```

# Base File
Based on Supplementary Data Table 1 from https://www.nature.com/articles/s41523-022-00465-3
```{r}
samples <- read.xlsx(xlsxFile = 'https://static-content.springer.com/esm/art%3A10.1038%2Fs41523-022-00465-3/MediaObjects/41523_2022_465_MOESM2_ESM.xlsx',sheet = 1)
```

# Sample groups with outlier removal and ranking
```{r}
# Outlier Removal
sampleFilter <- samples %>% 
  filter(between(ReferenceYear,2010,2016),
         RNA.NDConc >= 200,
         ER=='Positive',
         HER2=='Negative',
         !is.na(NHG),
         !is.na(DRFi_event),
         !duplicated(Sample)) 

sampleFilterFollowUp <- samples %>% 
  filter(Follow.up.cohort==TRUE,
         RNA.NDConc >= 200,
         ER=='Positive',
         HER2=='Negative',
         !is.na(NHG),
         !is.na(DRFi_event))

for (i in c(1:3)) {
  quartiles <- quantile(x = sampleFilter$Size.mm,probs = c(0.25,0.75),na.rm = TRUE)
  interQuantileR <- IQR(sampleFilter$Size.mm,na.rm = TRUE)
  lowerRange <- quartiles[1]-1.5*interQuantileR
  upperRange <- quartiles[2]+1.5*interQuantileR
  sampleFilter <- sampleFilter %>% 
    filter(between(Size.mm,lowerRange,upperRange))
  i <- i+1
  print(i)
}

for (i in c(1:3)) {
  quartiles <- quantile(x = sampleFilterFollowUp$Size.mm,probs = c(0.25,0.75),na.rm = TRUE)
  interQuantileR <- IQR(sampleFilterFollowUp$Size.mm,na.rm = TRUE)
  lowerRange <- quartiles[1]-1.5*interQuantileR
  upperRange <- quartiles[2]+1.5*interQuantileR
  sampleFilterFollowUp <- sampleFilterFollowUp %>% 
    filter(between(Size.mm,lowerRange,upperRange))
  i <- i+1
  print(i)
}
```

```{r}
set.seed(123)
g1_teste <- sampleFilterFollowUp %>% 
  dplyr::filter(between(ReferenceYear,2010,2012),
                LN.spec=='N0',
                DRFi_event==0,
                InvCa.type == 'Ductal',
                TreatGroup == 'Endo' | TreatGroup == 'ChemoEndo',
                !rstatix::is_outlier(Size.mm,coef = 1.5)) %>% 
  slice_sample(n = 25,weight_by = Size.mm**2)
g1_teste <- sampleFilterFollowUp %>% 
  dplyr::filter(!(sampleFilterFollowUp$GEX.assay %in% g1_teste$GEX.assay),
                between(ReferenceYear,2010,2012),
                LN.spec=='N0',
                DRFi_event==0,
                InvCa.type == 'Ductal',
                TreatGroup == 'ChemoEndo') %>% 
  slice_sample(n = 5,weight_by = Size.mm) %>% 
  bind_rows(g1_teste,.)

set.seed(123)
g2_teste <- sampleFilterFollowUp %>% 
  dplyr::filter(LN.spec=='N0',
                DRFi_event==1,
                InvCa.type == 'Ductal',
                TreatGroup == 'Endo' | TreatGroup == 'ChemoEndo')
g2_teste <- sampleFilter %>% 
  dplyr::filter(!(sampleFilter$Sample %in% g2_teste$Sample),
                Follow.up.cohort==FALSE,
                LN.spec=='N0',
                DRFi_event==1,
                InvCa.type == 'Ductal',
                TreatGroup == 'Endo' | TreatGroup == 'ChemoEndo') %>% 
  slice_sample(n=2) %>% 
  bind_rows(g2_teste,.)

set.seed(123)
g3_teste <- sampleFilterFollowUp %>% 
  dplyr::filter(between(ReferenceYear,2010,2012),
                LN.spec=='1to3',
                InvCa.type == 'Ductal') %>%
  arrange(ReferenceYear) %>% 
  slice_sample(n = 30)


set.seed(123)
g4_teste <- sampleFilterFollowUp %>% 
  dplyr::filter(between(ReferenceYear,2010,2012),
                LN.spec=='4toX',
                InvCa.type == 'Ductal') %>% 
  arrange(ReferenceYear) %>% 
  slice_sample(n = 30,weight_by = 1/Size.mm**2)


set.seed(123)
g5_teste <- sampleFilterFollowUp %>% 
  dplyr::filter(LN.spec=='N0',
                InvCa.type == 'Lobular') %>% 
  arrange(ReferenceYear)

set.seed(123)
g6_teste <- sampleFilter %>% 
  dplyr::filter(LN.spec=='1to3'|LN.spec=='4toX',
                InvCa.type == 'Lobular') %>% 
  arrange(ReferenceYear)
```

```{r}
groupInfo <- c(rep('Group1',30),rep('Group2',30),rep('Group3',30),rep('Group4',30),rep('Group5',33),rep('Group6',31)) %>% as_factor
# samplesUsed <- bind_rows(g1_size,g2_size,g3_size,g4_size,g5_size,g6_size) %>% mutate(Group.Info=groupInfo)
samplesUsed <- bind_rows(g1_teste,g2_teste,g3_teste,g4_teste,g5_teste,g6_teste) %>% mutate(Group.Info=groupInfo)
```

```{r}
medians <- samplesUsed %>%
  arrange(Group.Info) %>% 
  group_by(Group.Info) %>% 
  group_map(.data = .,.f = ~median(.x$Size.mm,na.rm = T))
names(medians) <- levels(samplesUsed$Group.Info)

plot_multi_histogram <- function(df, feature, label_column, medians) {
    plt <- ggplot(df, aes(x=eval(parse(text=feature)), fill=eval(parse(text=label_column)))) +
    geom_histogram(alpha=0.7, position="identity", aes(y = after_stat(density)), color="black") +
    geom_density(alpha=0.7) +
    geom_vline(xintercept=medians, color="black", linetype="dashed", size=1)
    labs(x=feature, y = "Density")
    plt + guides(fill=guide_legend(title=label_column))
}

plot_multi_histogram(df = samplesUsed,feature = 'Size.mm',label_column = 'Group.Info',medians = unlist(medians))
print(medians)
```

```{r}
samplesUsed %>% 
  filter(str_detect(string = Group.Info,pattern = '1|2|3|4')) %>% 
  ggpubr::ggboxplot(data = .,x = 'Group.Info',y = 'Size.mm')
model <- samplesUsed %>% 
  filter(str_detect(string = Group.Info,pattern = '1|2|3|4')) %>%
  lm(Size.mm~Group.Info, data = .)
ggpubr::ggqqplot(residuals(model))
shapiro.test(residuals(model))


resAOV <- samplesUsed %>% 
  filter(str_detect(string = Group.Info,pattern = '1|2|3|4')) %>%
  rstatix::anova_test(data = .,Size.mm~Group.Info)
resAOV

samplesUsed %>% 
  group_by(Group.Info) %>% 
  rstatix::shapiro_test(Size.mm)
#Group 6 is not normally distributed (only 31 samples with at least 5 year followup)

resKruskal <-samplesUsed %>% 
  filter(str_detect(string = Group.Info,pattern = '1|2|3|4')) %>%
  rstatix::kruskal_test(Size.mm ~ Group.Info, data = .)
resKruskal

samplesUsed %>% 
  rstatix::t_test(formula = Size.mm~Group.Info,
                  comparisons = list(c('Group1','Group2'),
                                     c('Group1','Group3'),
                                     c('Group1','Group4'),
                                     c('Group2','Group3'),
                                     c('Group2','Group4'),
                                     c('Group3','Group4')),
                  p.adjust.method = 'fdr',
                  detailed = TRUE)
samplesUsed %>% 
  rstatix::wilcox_test(formula = Size.mm~Group.Info,
                       comparisons = list(c('Group5','Group6')),
                       p.adjust.method = 'fdr',
                       detailed = TRUE)


samplesUsed %>% group_by(Group.Info,TreatGroup) %>% summarise(n())
```

  Shapiro test shows that g3 and g6 are not normally distributed (significant p value <0.05)
  Sampling for group3 was changed to only look for samples between 2010 and 2011 and take 30 random ones. I did not use size as a weight because I wanted median tumour size to remain unchanged
  Sampling for group1 was changed because the oldest samples (there are more than 30 samples which are present in 2010 alone) would lead to significantly different size (based on ANOVA). To increase the median size and make it compatible with the remaining groups, samples were filtered based on year (2010 and 2011) and 30 random samples were selected, using Size.mm as weight increase sampling from larger tumour sizes.
  There is a significant difference (wilcoxon rank sum test, since group 6 is not normally distributed) between groups 5 and 6. However, considering samples 2010-2016 (5 year follow up time), there are 34 and 31 samples that fall into those groups in total.
  Group4 had the highest median size between groups 1-4. Since there were 101 samples in total between 2010-2016, the interval was narrowed down to 2010-2012 to guarantee 30 samples and then sampling was at random with 1/Size.mm as weight
  Running the same script with seed 1234 bring the values for groups 1-4 even closer, but some groups have issues with normality that would have to be addressed.


  2025.02.07:
    Added one extra sample (S000941) since S000940 was incorrectly labelled. That way all files downstream can be generated from one single file. S000940 is removed
    If the file is saved without replacing the samples, it is identical to the original one
```{r}
samplesUsed <- sampleFilterFollowUp |> 
    filter(str_detect(string = GEX.assay,pattern = 'S000941')) |> 
    bind_rows(samplesUsed)
samplesUsed[["Group.Info"]][which(samplesUsed[["Sample"]]=='S000941')] <- 'Group1'
samplesUsed <- samplesUsed |> 
    filter(Sample!='S000940')
write_tsv(x = samplesUsed,file = paste0(outputdir, 'base_design.tsv'))
```